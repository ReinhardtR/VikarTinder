@using HttpClients.Services
@inject ChatService ChatService

<MudPaper Class="@GetMessageClasses()" Style="@GetMessageStyles()">
    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
        <MudText Style="@GetTextColor()">Accepterer du jobbet?</MudText>
        <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudButton Disabled="@IsAuthor()" Variant="Variant.Filled" Color="Color.Success" OnClick="() => SubmitAnswer(true)">
                Ja
            </MudButton>
            <MudButton Disabled="@IsAuthor()" Variant="Variant.Filled" Color="Color.Error" OnClick="() => SubmitAnswer(false)">
                Nej
            </MudButton>
        </MudStack>
    </MudStack>
</MudPaper>

@code {
    
    [Parameter]
    public int ChatId { get; set; }
    
    // TODO replace with auth stuff?
    [Parameter]
    public int UserId { get; set; }
      
    [Parameter]
    public int AuthorId { get; set; }

    private async void SubmitAnswer(bool accepted)
    {
        Console.WriteLine("accepted: " + accepted);
    }

    private bool IsAuthor()
    {
        return UserId == AuthorId;
    }
    
    private string GetTextColor()
    {
        return IsAuthor() ? "" : "color: white;";
    }
    
    private string GetMessageClasses()
    {
        string baseClasses = "pa-3";
        string uniqueClasses = IsAuthor() ? "ml-auto" : "mr-auto";
        return $"{baseClasses} {uniqueClasses}";
    }
    
    private string GetMessageStyles()
    {
        string baseStyles = "max-width: 80%; word-break: break-all;";
        string uniqueStyles = IsAuthor() ? "background-color: #ebebeb;" : "background-color: #ff4081;";
        return $"{baseStyles} {uniqueStyles} " + GetTextColor();
    }
}