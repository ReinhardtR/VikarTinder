@using System.Security.Claims
@using HttpClients.Services
@using WebClient.Utils
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthService AuthService

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudButton OnClick="@NavigateToHome" Variant="Variant.Text" Style="color: white">
            <MudStack Row="@true" Spacing="2" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Filled.ContactPage" />
                <MudText Typo="Typo.h6">Vikar Tinder</MudText>
            </MudStack>
        </MudButton>
        
        <AuthorizeView>
            <MudButton OnClick="@NavigateToMatching" Variant="Variant.Text" Style="color: white">Match</MudButton>
            <MudButton OnClick="@NavigateToChatOverview" Variant="Variant.Text" Style="color: white">Chat</MudButton>
        </AuthorizeView>
    
        <MudSpacer />
        
       <AuthorizeView>
           <NotAuthorized>
               <MudStack Row="true" Spacing="2">
                  <MudButton OnClick="NavigateToSignup" Variant="Variant.Text" Style="color: white">Opret dig</MudButton>
                  <MudButton OnClick="NavigateToLogin" EndIcon="@Icons.Filled.Login" Variant="Variant.Filled" Color="Color.Secondary" >Log ind</MudButton>
               </MudStack>
           </NotAuthorized>
           <Authorized>
               <MudMenu AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                   <ActivatorContent>
                       <MudStack Row="true" Spacing="2" Justify="Justify.Center" AlignItems="AlignItems.Center">
                           @{
                                Claim nameClaim = AuthClaims.GetClaim(context, AuthClaims.FirstName);
                                string name = nameClaim?.Value ?? "Unknown";
                           }
                           <MudAvatar Color="Color.Secondary">@name[0]</MudAvatar>
                           <MudText Typo="Typo.button">@name</MudText>
                       </MudStack>
                   </ActivatorContent>
                   <ChildContent>
                       <MudMenuItem Icon="@Icons.Filled.Person" OnClick="NavigateToProfile">
                           Se profil
                       </MudMenuItem>
                       <MudMenuItem Icon="@Icons.Filled.Logout" OnClick="LogoutHandler">
                           Log ud
                       </MudMenuItem>
                   </ChildContent>
               </MudMenu>
           </Authorized>
       </AuthorizeView>
    </MudAppBar>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium" Class="py-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private async Task LogoutHandler()
    {
        await AuthService.LogoutAsync();
    }

    private void NavigateToMatching()
    {
        NavigationManager.NavigateTo("/matching");
    }
    
    private async void NavigateToProfile()
    {
        AuthenticationState authState = await AuthState;

        int userId = AuthClaims.GetUserId(authState);
        string role = AuthClaims.GetRole(authState);
        
        switch (role)
        {
            case AuthRoles.Employer:
                NavigationManager.NavigateTo($"/arbejdsugiver/{userId}");
                break;
            case AuthRoles.Substitute:
                NavigationManager.NavigateTo($"/vikar/{userId}");
                break;
        }
    }
    
    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToChatOverview()
    {
        NavigationManager.NavigateTo("/chat");
    }
    
    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/log-ind");
    }
    
    private void NavigateToSignup()
    {
        NavigationManager.NavigateTo("/opret");
    }

}