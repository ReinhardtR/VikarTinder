@using HttpClients.Services.Interfaces
@using System.Security.Claims
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudButton OnClick="@NavigateToHome" Variant="Variant.Text" Style="color: white">
            <MudStack Row="@true" Spacing="2" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Filled.ContactPage" />
                <MudText Typo="Typo.h6">Vikar Tinder</MudText>
            </MudStack>
        </MudButton>
        
        <MudButton OnClick="@NavigateToChatOverview" Variant="Variant.Text" Style="color: white">Chat</MudButton>
        
        <MudSpacer />
        
       <AuthorizeView>
           <NotAuthorized>
               <MudButton OnClick="LoginHandler" EndIcon="@Icons.Filled.Login" Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true">Login</MudButton>
           </NotAuthorized>
           <Authorized>
               <MudMenu AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                   <ActivatorContent>
                       <MudStack Row="true" Spacing="2" Justify="Justify.Center" AlignItems="AlignItems.Center">
                           <MudAvatar Color="Color.Secondary">@context.User.Claims.First((c) => c.Type.Equals("name")).Value[0]</MudAvatar>
                           <MudText Typo="Typo.button">@context.User.Claims.First((c) => c.Type.Equals("name")).Value</MudText>
                       </MudStack>
                   </ActivatorContent>
                   <ChildContent>
                       <MudMenuItem Icon="@Icons.Filled.Logout" OnClick="LogoutHandler">
                           Logout
                       </MudMenuItem>
                   </ChildContent>
               </MudMenu>
           </Authorized>
       </AuthorizeView>
    </MudAppBar>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium" Class="py-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    
    // temporary
    private async Task LoginHandler()
    {
        await AuthService.LoginAsync();
        
        AuthenticationState state = await AuthState;
        ClaimsPrincipal principal = state.User;
 
        foreach (Claim principalClaim in principal.Claims)
        {
            Console.WriteLine($"Name: {principalClaim.Type}, Value: {principalClaim.Value}");
        }
    }
    
    private async Task LogoutHandler()
    {
        await AuthService.LogoutAsync();
    }
    
    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToChatOverview()
    {
        NavigationManager.NavigateTo("/chat");
    }

}