<MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
    <MudText>Vil du have jobbet?</MudText>
    <MudStack Row="@true" Justify="Justify.Center" AlignItems="AlignItems.Center">
        <MudButton OnClick="AcceptHandler" Variant="Variant.Filled" Color="Color.Success" Disabled="@isEmployer">
            Ja
        </MudButton>
        <MudButton OnClick="DeclineHandler" Variant="Variant.Outlined" Color="Color.Error" Disabled="@isEmployer">
            Nej
        </MudButton>
        @if (isEmployer)
        {
            <MudButton OnClick="CancelHandler" Variant="Variant.Text" Disabled="@(!isEmployer)">
                Annuller
            </MudButton>
        }
    </MudStack>
</MudStack>

@code {

    // replace with auth stuff
    private int userId = 2;

    // replace with auth stuff
    private bool isEmployer = false;
    
    [Parameter]
    public int GigId { get; set; }
    
    [Parameter]
    public int ChatId { get; set; }

    [Parameter]
    public Action? OnFinished { get; set; }
    
    private void AcceptHandler()
    {
        try
        {
            // call server and accept job request
        } 
        catch (Exception e)
        {
            // error handling
        }
        
        OnFinished?.Invoke();
    }
    
    private void DeclineHandler()
    {
        try
        {
            // call server and decline job request
        } 
        catch (Exception e)
        {
            // error handling
        }
        
        OnFinished?.Invoke();
    }
    
    private void CancelHandler()
    {
        try
        {
            // call server and cancel job request
        } 
        catch (Exception e)
        {
            // error handling
        }
        
        OnFinished?.Invoke();
    }
}